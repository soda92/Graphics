name: CI - Windows
on: [pull_request, push]

jobs:
  build:
    name: ðŸš§Build
    runs-on: windows-latest

    env:
      prog_name: Examples/Triangle/main.exe

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Configure build for amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Install build tools
        run: |
          choco install ninja

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            C:/vcpkg
            !C:/vcpkg/buildtrees
          key: ${{ runner.os }}-${{ hashFiles('.github/workflows/commands.ps1') }}

      # tell vcpkg to only build Release variants of the dependencies
      - name: Configure vcpkg triplet overlay
        run: |
          New-Item `
            -Path "${{ github.workspace }}" `
            -Name "triplets_overlay" `
            -ItemType Directory
          Copy-Item `
            C:/vcpkg/triplets/x64-windows-static.cmake" `
            "${{ github.workspace }}/triplets_overlay/x64-windows-static-release.cmake"
          Add-Content `
            "${{ github.workspace }}/triplets_overlay/x64-windows-static-release.cmake" `
            -Value "set(VCPKG_BUILD_TYPE release)"

      # clear buildtrees after each package installation to reduce disk space requirements
      - name: Install dependencies
        run: |
          $packages = `
            "glfw3:x64-windows-static-release",
            "glad:x64-windows-static-release",
            "assimp:x64-windows-static-release"

          C:/vcpkg/vcpkg.exe upgrade `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --no-dry-run
          C:/vcpkg/vcpkg.exe install `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --clean-after-build `
            $packages

      - name: 'ðŸš§ Build package'
        run: |
          pwsh .github/workflows/commands.ps1
          New-Item -Type Directory build/dist
          Copy-Item build/${{env.prog_name}} build/dist/
          Copy-Item -Recurse Examples/Triangle/Shaders build/dist/

      - name: 'ðŸ“¤ upload package'
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/dist
